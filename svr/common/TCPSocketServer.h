/******************************************************************************
  文 件 名   : TCPSocketServer.h
  版 本 号   : 初稿
  作    者   : BarretXia
  生成日期   : 2016年3月2日
  最近修改   :
  功能描述   : tcp socket server
  函数列表   :
  修改历史   :
  1.日    期   : 2016年3月2日
    作    者   : BarretXia
    修改内容   : 创建文件

******************************************************************************/

/*----------------------------------------------*
 * 包含头文件                                   *
 *----------------------------------------------*/
#pragma once
#include "TCPSocketServerBasic.h"
#include "HandlerProxyBasic.h"
#include "poker_msg.pb.h"
#include <queue>
using namespace std;
/*----------------------------------------------*
 * 外部变量说明                                 *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 外部函数原型说明                             *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 内部函数原型说明                             *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 全局变量                                     *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 模块级变量                                   *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 常量定义                                     *
 *----------------------------------------------*/

/*----------------------------------------------*
 * 宏定义                                       *
 *----------------------------------------------*/
 template <class T>
 class CTCPSocketServer  : public CTCPSocketServerBase 
 {
	 public:
		 CTCPSocketServer(HandlerProxyBasic * handler_porxy,const char* bindIp, uint16_t port, int acceptcnt=256, int backlog=256)
			 :CTCPSocketServerBase(handler_porxy,bindIp,   port,   acceptcnt,	backlog)
		 {};
		 virtual ~CTCPSocketServer(){};
 
	protected:
		 virtual CTCP_Handler_Base * CreateHandler(int netfd, struct sockaddr* peer)
		 {
			 return new T;
		 }
 };

